apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-deployment
  namespace: airflow-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  serviceName: postgres-db
  minReadySeconds: 10 # by default is 0
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: postgres-db
          image: postgres:10.1 
          imagePullPolicy: "IfNotPresent" 
          ports:
            - containerPort: 5432
          envFrom: 
            - configMapRef: 
                name: postgres-config 
          volumeMounts: 
            - mountPath: /var/lib/postgresql/data 
              name: postgredb 
      volumes: 
        - name: postgredb
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: airflow-app
  labels:
    xccelerated.io/moritz-project: airflow-app
spec:
  selector:
    app: postgres-db
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      name: postgres-service
---
apiVersion: batch/v1
kind: Job
metadata:
  name: postgres-airflow-initdb
  namespace: airflow-app
  labels:
    xccelerated.io/moritz-project: airflow-app
spec:
  template:
    spec:
      containers:
      - name: postgres-airflow
        image: apache/airflow:2.2.4
        imagePullPolicy: IfNotPresent
        env:
        - name: AIRFLOW__CORE__SQL_ALCHEMY_CONN 
          valueFrom: 
            configMapKeyRef: 
              name: airflow-config 
              key: sql_alchemy_conn 
        command: ["airflow"]
        args: ["db", "init"]
      restartPolicy: Never